{"version":3,"sources":["helpers/helpers.js","pages/FilmsPage/FilmsPage.js","services/Api.js","assets/style.module.css"],"names":["MONTH_NAMES","FilmsPage","props","_useState","useState","_useState2","Object","slicedToArray","films","setFilms","useEffect","drowFilmsPage","getFilmsPage","then","res","json","data","results","location","react_default","a","createElement","className","S","list","map","_ref","title","producer","opening_crawl","release_date","url","list__item","key","shortid","react_router_dom","to","pathname","concat","slice","state","from","list__link","list__btn","list__title","list__date","date","Error","_date$split","split","_date$split2","year","month","day","length","parseInt","Number","formatDate","list__producer","list__description","substring","__webpack_require__","d","__webpack_exports__","getPeoplePage","getPlanetsPage","getSpeciesPage","getStarshipsPage","getVehiclesPage","API_URL","fetch","replace","module","exports"],"mappings":"qJAAMA,EAAc,CAClB,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,qCCkCaC,UAtCG,SAAAC,GAAS,IAAAC,EACCC,mBAAS,IADVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBK,EADkBH,EAAA,GACXI,EADWJ,EAAA,GAGzBK,oBAAU,WACRC,KACC,IAEH,IAAMA,EAAgB,kBACpBC,cACGC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIP,EAASO,EAAKC,YAExBC,EAAahB,EAAbgB,SACR,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAEC,MACdhB,EAAMiB,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,SAAUC,EAApBH,EAAoBG,cAAeC,EAAnCJ,EAAmCI,aAAcC,EAAjDL,EAAiDK,IAAjD,OACTZ,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAES,WAAYC,IAAKC,OAChCf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,GAAI,CACFC,SAAU,GAAAC,OAAGP,GAAMQ,MAAM,IACzBC,MAAO,CAAEC,KAAMvB,IAEjBI,UAAWC,IAAEmB,YAEbvB,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAEoB,WAArB,wBAEFxB,EAAAC,EAAAC,cAAA,MAAIC,UAAWC,IAAEqB,aAAcjB,GAC/BR,EAAAC,EAAAC,cAAA,QAAMC,UAAWC,IAAEsB,YDpBH,SAAAC,GACxB,IAAKA,EACH,MAAM,IAAIC,MAAM,8BAFc,IAAAC,EAKLF,EAAKG,MAAM,KALNC,EAAA5C,OAAAC,EAAA,EAAAD,CAAA0C,EAAA,GAKzBG,EALyBD,EAAA,GAKnBE,EALmBF,EAAA,GAKZG,EALYH,EAAA,GAMhC,IACGC,IACAC,IACAC,GACDF,EAAKG,OAAS,GACdC,SAASH,GAAS,GAClBG,SAASH,GAAS,GAElB,MAAM,IAAIL,MAAM,uCAElB,SAAAT,OAAUtC,EAAYwD,OAAOJ,GAAS,GAAtC,KAAAd,OAA4Ce,EAA5C,MAAAf,OAAoDa,GCIZM,CAAW3B,IAC3CX,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAEmC,gBAAhB,aAA2C9B,GAC3CT,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAEoC,mBACb9B,EAAc+B,UAAU,EAAG,KAD9B,6CCrCVC,EAAAC,EAAAC,EAAA,sBAAAnD,IAAAiD,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAAP,EAAA,QAOMQ,EAAU,yBAEHzD,EAAe,kBAAM0D,MAAK,GAAAhC,OAAI+B,EAAJ,WAE1BL,EAAgB,kBAC3BM,MAAM,GAAAhC,OAAG+B,EAAH,UAAmBE,QAAQ,OAAQ,WAE9BN,EAAiB,kBAC5BK,MAAM,GAAAhC,OAAG+B,EAAH,WAAoBE,QAAQ,OAAQ,WAE/BL,EAAiB,kBAC5BI,MAAM,GAAAhC,OAAG+B,EAAH,WAAoBE,QAAQ,OAAQ,WAE/BJ,EAAmB,kBAC9BG,MAAM,GAAAhC,OAAG+B,EAAH,aAAsBE,QAAQ,OAAQ,WAEjCH,EAAkB,kBAC7BE,MAAM,GAAAhC,OAAG+B,EAAH,YAAqBE,QAAQ,OAAQ,+BCvB7CC,EAAAC,QAAA,CAAkBjD,KAAA,oBAAAQ,WAAA,0BAAAW,UAAA,yBAAAC,YAAA","file":"static/js/FilmsPage.f594d28b.chunk.js","sourcesContent":["const MONTH_NAMES = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n];\r\n\r\nexport const formatDate = date => {\r\n  if (!date) {\r\n    throw new Error('Missing required parameter');\r\n  }\r\n\r\n  const [year, month, day] = date.split('-');\r\n  if (\r\n    !year ||\r\n    !month ||\r\n    !day ||\r\n    year.length < 4 ||\r\n    parseInt(month) < 1 ||\r\n    parseInt(month) > 12\r\n  ) {\r\n    throw new Error('Parameter format must be YYYY-MM-DD');\r\n  }\r\n  return `${MONTH_NAMES[Number(month) - 1]} ${day}, ${year}`;\r\n};\r\n","import React, { useEffect, useState } from 'react';\nimport shortid from 'shortid';\nimport { Link } from 'react-router-dom';\n\nimport { formatDate } from '../../helpers/helpers';\nimport { getFilmsPage } from '../../services/Api';\nimport S from '../../assets/style.module.css';\n\nconst FilmsPage = props => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    drowFilmsPage();\n  }, []);\n\n  const drowFilmsPage = () =>\n    getFilmsPage()\n      .then(res => res.json())\n      .then(data => setFilms(data.results));\n\n  const { location } = props;\n  return (\n    <ul className={S.list}>\n      {films.map(({ title, producer, opening_crawl, release_date, url }) => (\n        <li className={S.list__item} key={shortid()}>\n          <Link\n            to={{\n              pathname: `${url}`.slice(21),\n              state: { from: location },\n            }}\n            className={S.list__link}\n          >\n            <button className={S.list__btn}>{`\\u25c0`} More Info</button>\n          </Link>\n          <h2 className={S.list__title}>{title}</h2>\n          <span className={S.list__date}>{formatDate(release_date)}</span>\n          <p className={S.list__producer}>Producer: {producer}</p>\n          <p className={S.list__description}>\n            {opening_crawl.substring(0, 260)}...\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default FilmsPage;\n","import axios from 'axios';\n\nconst myInitMethods = {\n  method: 'GET',\n  mode: 'cors',\n};\n\nconst API_URL = 'https://swapi.dev/api/';\n\nexport const getFilmsPage = () => fetch(`${API_URL}films`);\n\nexport const getPeoplePage = () =>\n  fetch(`${API_URL}people`.replace('http', 'https'));\n\nexport const getPlanetsPage = () =>\n  fetch(`${API_URL}planets`.replace('http', 'https'));\n\nexport const getSpeciesPage = () =>\n  fetch(`${API_URL}species`.replace('http', 'https'));\n\nexport const getStarshipsPage = () =>\n  fetch(`${API_URL}starships`.replace('http', 'https'));\n\nexport const getVehiclesPage = () =>\n  fetch(`${API_URL}vehicles`.replace('http', 'https'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__2RxpR\",\"list__item\":\"style_list__item__2PSep\",\"list__btn\":\"style_list__btn__3hf7H\",\"list__title\":\"style_list__title__11Djc\"};"],"sourceRoot":""}