{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","pages/DetailPage/FilmsDetailPage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime-module.js","../node_modules/babel-preset-react-app/node_modules/regenerator-runtime/runtime.js","pages/DetailPage/FilmsDetailPage.module.css"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","FilmsDetailPage","props","id","useParams","_useState","useState","_useState2","Object","slicedToArray","description","setDescription","useEffect","getSingleMovie","fn","_ref","regenerator_default","a","mark","_callee","res","resJson","resCharacters","resPlanets","resSpecies","resStarships","resVehicles","characters","planets","species","starships","vehicles","data","wrap","_context","prev","next","fetch","concat","sent","json","map","url","replace","c","name","all","director","opening_crawl","producer","releaseDate","release_date","title","console","log","abrupt","stop","self","this","args","arguments","apply","err","undefined","_x","handleGoBack","location","history","state","push","from","transformToArrDescription","react_default","createElement","Fragment","className","S","list","_ref2","list__item","shortid","btn","onClick","main__info","list__title","_ref3","description__item","list__text","_ref4","_ref5","_ref6","module","exports","__webpack_require__","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","toString","keys","object","reverse","length","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","obj","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","return","TypeError","pushTryEntry","locs","iteratorMethod"],"mappings":"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","file":"static/js/FilmsDetailPage.c88bee73.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { useEffect, useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport S from './FilmsDetailPage.module.css';\r\n\r\nconst FilmsDetailPage = props => {\r\n  const { id } = useParams();\r\n  const [description, setDescription] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getSingleMovie(id);\r\n  }, []);\r\n\r\n  const getSingleMovie = async id => {\r\n    const res = await fetch(`https://swapi.dev/api/films/${id}`);\r\n    const resJson = await res.json();\r\n    const resCharacters = resJson.characters.map(url =>\r\n      fetch(url.replace('http', 'https'))\r\n        .then(data => data.json())\r\n        .then(c => c.name),\r\n    );\r\n    const resPlanets = resJson.planets.map(url =>\r\n      fetch(url.replace('http', 'https'))\r\n        .then(data => data.json())\r\n        .then(c => c.name),\r\n    );\r\n    const resSpecies = resJson.species.map(url =>\r\n      fetch(url.replace('http', 'https'))\r\n        .then(data => data.json())\r\n        .then(c => c.name),\r\n    );\r\n    const resStarships = resJson.starships.map(url =>\r\n      fetch(url)\r\n        .then(data => data.json())\r\n        .then(c => c.name),\r\n    );\r\n    const resVehicles = resJson.vehicles.map(url =>\r\n      fetch(url.replace('http', 'https'))\r\n        .then(data => data.json())\r\n        .then(c => c.name),\r\n    );\r\n\r\n    const characters = await Promise.all(resCharacters);\r\n    const planets = await Promise.all(resPlanets);\r\n    const species = await Promise.all(resSpecies);\r\n    const starships = await Promise.all(resStarships);\r\n    const vehicles = await Promise.all(resVehicles);\r\n    const data = {\r\n      characters,\r\n      director: resJson.director,\r\n      description: resJson.opening_crawl,\r\n      planets,\r\n      producer: resJson.producer,\r\n      releaseDate: resJson.release_date,\r\n      species,\r\n      starships,\r\n      title: resJson.title,\r\n      vehicles,\r\n    };\r\n    console.log('data', data);\r\n    return setDescription(data);\r\n  };\r\n\r\n  const handleGoBack = () => {\r\n    const { location, history } = props;\r\n    if (location.state) {\r\n      return history.push(location.state.from);\r\n    }\r\n\r\n    history.push('/');\r\n  };\r\n\r\n  console.log('description', description);\r\n  const transformToArrDescription = [description];\r\n  return (\r\n    <>\r\n      <ul className={S.list}>\r\n        {transformToArrDescription.map(\r\n          ({ title, producer, description, director }) => (\r\n            <li className={S.list__item} key={shortid()}>\r\n              <button className={S.btn} onClick={handleGoBack}>\r\n                ← Back to list\r\n              </button>\r\n              <div className={S.main__info}>\r\n                <h2 className={S.list__title}>{title}</h2>\r\n                <p>Producer: {producer}</p>\r\n                <p>Director: {director}</p>\r\n              </div>\r\n              <p>Descriptions:</p>\r\n              <p>{description}</p>\r\n            </li>\r\n          ),\r\n        )}\r\n      </ul>\r\n\r\n      <ul className={S.list}>\r\n        {transformToArrDescription.map(({ vehicles }) => (\r\n          <li className={S.description__item} key={shortid()}>\r\n            <h4 className={S.list__text}>vehicles</h4>\r\n            {vehicles}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ul className={S.list}>\r\n        {transformToArrDescription.map(({ characters }) => (\r\n          <li className={S.description__item} key={shortid()}>\r\n            <h4 className={S.list__text}>characters</h4>\r\n            {characters}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ul className={S.list}>\r\n        {transformToArrDescription.map(({ planets }) => (\r\n          <li className={S.description__item} key={shortid()}>\r\n            <h4 className={S.list__text}> planets</h4>\r\n            {planets}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <ul className={S.list}>\r\n        {transformToArrDescription.map(({ species }) => (\r\n          <li className={S.description__item} key={shortid()}>\r\n            <h4 className={S.list__text}>species</h4>\r\n            {species}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilmsDetailPage;\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = function () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")(); // Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\n\nvar hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0; // Save the old regeneratorRuntime in case it needs to be restored later.\n\nvar oldRuntime = hadRuntime && g.regeneratorRuntime; // Force reevalutation of runtime.js.\n\ng.regeneratorRuntime = undefined;\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch (e) {\n    g.regeneratorRuntime = undefined;\n  }\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n!function (global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    } // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n\n\n    return;\n  } // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n\n\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  runtime.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  runtime.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  runtime.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  runtime.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  runtime.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n}( // In sloppy mode, unbound `this` refers to the global object, fallback to\n// Function constructor if we're in global strict mode. That is sadly a form\n// of indirect eval which violates Content Security Policy.\nfunction () {\n  return this || typeof self === \"object\" && self;\n}() || Function(\"return this\")());","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FilmsDetailPage_list__2-knR\",\"list__title\":\"FilmsDetailPage_list__title__1GS6h\",\"list__text\":\"FilmsDetailPage_list__text__2xmWd\",\"main__info\":\"FilmsDetailPage_main__info__L_Vgg\",\"btn\":\"FilmsDetailPage_btn__1nWUl\"};"],"sourceRoot":""}